name: Python CI

on:
  push:
    branches: [ main, develop, solana-mcp-phala ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'setup.py'
      - '**/pyproject.toml'
      - '**/poetry.lock'
      - '.github/workflows/python-ci.yml'
  pull_request:
    branches: [ main, develop, solana-mcp-phala ]
    paths:
      - '**.py'
      - 'requirements.txt'
      - 'setup.py'
      - '**/pyproject.toml'
      - '**/poetry.lock'
      - '.github/workflows/python-ci.yml'

jobs:
  lint:
    name: Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black isort mypy
          # Install project dependencies for type checking
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
      
      - name: Run ruff (linter)
        run: |
          ruff check . --output-format=github --exit-zero
        continue-on-error: true
      
      - name: Run black (formatter check)
        run: |
          black --check --diff . || true
        continue-on-error: true
      
      - name: Run isort (import sorting check)
        run: |
          isort --check-only --diff . || true
        continue-on-error: true
      
      - name: Run mypy (type checking)
        run: |
          mypy . --ignore-missing-imports --no-error-summary || true
        continue-on-error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install pip-audit
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit
      
      - name: Run pip-audit on requirements.txt
        run: |
          if [ -f requirements.txt ]; then
            pip-audit -r requirements.txt --desc || true
          fi
        continue-on-error: true
      
      - name: Run pip-audit on solana-agent-kit-py-main
        run: |
          if [ -f solana-agent-kit-py-main/setup.py ]; then
            cd solana-agent-kit-py-main
            pip install -e . || true
            cd ..
            pip-audit --desc || true
          fi
        continue-on-error: true

  test:
    name: Test Python Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
      
      - name: Run tests with pytest
        run: |
          # Only run tests if test files exist
          if [ -f test_run.py ] || [ -d tests ]; then
            pytest --verbose --tb=short || true
          else
            echo "No tests found, skipping test execution"
          fi
        continue-on-error: true
